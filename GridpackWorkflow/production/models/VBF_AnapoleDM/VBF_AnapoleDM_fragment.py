import FWCore.ParameterSet.Config as cms

from Configuration.Generator.Pythia8CommonSettings_cfi import *
#from Configuration.Generator.Pythia8CUEP8M1Settings_cfi import *
from Configuration.Generator.MCTunes2017.PythiaCP2Settings_cfi import *

import math

baseSLHATable="""######################################################################
## PARAM_CARD AUTOMATICALY GENERATED BY MG5 FOLLOWING UFO MODEL   ####
######################################################################
##                                                                  ##
##  Width set on Auto will be computed following the information    ##
##        present in the decay.py files of the model.               ##
##        See  arXiv:1402.1178 for more details.                    ##
##                                                                  ##
######################################################################

###################################
## INFORMATION FOR CKMBLOCK
###################################
Block ckmblock 
    1 2.277360e-01 # cabi 

###################################
## INFORMATION FOR CUTOFF
###################################
Block cutoff 
    1 1.000000e+00 # Cf 
    2 %MLAMBDA% # cutoff 

###################################
## INFORMATION FOR MASS
###################################
Block mass 
    1 5.040000e-03 # MD 
    2 2.550000e-03 # MU 
    3 1.010000e-01 # MS 
    4 1.270000e+00 # MC 
    5 4.700000e+00 # MB 
    6 1.720000e+02 # MT 
   11 5.110000e-04 # Me 
   13 1.056600e-01 # MM 
   15 1.777000e+00 # MTA 
   23 9.118760e+01 # MZ 
   25 1.200000e+02 # MH 
  1000022 %MN1% # Mn1 
## Dependent parameters, given by model restrictions.
## Those values should be edited following the 
## analytical expression. MG5 ignores those values 
## but they are important for interfacing the output of MG5
## to external program such as Pythia.
  12 0.000000 # ve : 0.0 
  14 0.000000 # vm : 0.0 
  16 0.000000 # vt : 0.0 
  21 0.000000 # g : 0.0 
  22 0.000000 # a : 0.0 
  24 79.824360 # w+ : cmath.sqrt(MZ__exp__2/2. + cmath.sqrt(MZ__exp__4/4. - (aEW*cmath.pi*MZ__exp__2)/(Gf*sqrt__2))) 

###################################
## INFORMATION FOR SMINPUTS
###################################
Block sminputs 
    1 1.279000e+02 # aEWM1 
    2 1.166370e-05 # Gf 
    3 1.184000e-01 # aS 

###################################
## INFORMATION FOR YUKAWA
###################################
Block yukawa 
    1 5.040000e-03 # ymdo 
    2 2.550000e-03 # ymup 
    3 1.010000e-01 # yms 
    4 1.270000e+00 # ymc 
    5 4.700000e+00 # ymb 
    6 1.720000e+02 # ymt 
   11 5.110000e-04 # yme 
   13 1.056600e-01 # ymm 
   15 1.777000e+00 # ymtau 

###################################
## INFORMATION FOR DECAY
###################################
DECAY   6 1.508336e+00 # WT 
DECAY  23 2.495200e+00 # WZ 
DECAY  24 2.085000e+00 # WW 
DECAY  25 5.753088e-03 # WH 
## Dependent parameters, given by model restrictions.
## Those values should be edited following the 
## analytical expression. MG5 ignores those values 
## but they are important for interfacing the output of MG5
## to external program such as Pythia.
DECAY  1 0.000000 # d : 0.0 
DECAY  2 0.000000 # u : 0.0 
DECAY  3 0.000000 # s : 0.0 
DECAY  4 0.000000 # c : 0.0 
DECAY  5 0.000000 # b : 0.0 
DECAY  11 0.000000 # e- : 0.0 
DECAY  12 0.000000 # ve : 0.0 
DECAY  13 0.000000 # mu- : 0.0 
DECAY  14 0.000000 # vm : 0.0 
DECAY  15 0.000000 # ta- : 0.0 
DECAY  16 0.000000 # vt : 0.0 
DECAY  21 0.000000 # g : 0.0 
DECAY  22 0.000000 # a : 0.0 
DECAY  1000022 0.000000 # n1 : 0.0 
#===========================================================
# QUANTUM NUMBERS OF NEW STATE(S) (NON SM PDG CODE)
#===========================================================

Block QNUMBERS 1000022  # n1 
        1 0  # 3 times electric charge
        2 2  # number of spin states (2S+1)
        3 1  # colour rep (1: singlet, 3: triplet, 8: octet)
        4 0  # Particle/Antiparticle distinction (0=own anti)

"""

generator = cms.EDFilter("Pythia8GeneratorFilter",
    maxEventsToPrint = cms.untracked.int32(1),
    pythiaPylistVerbosity = cms.untracked.int32(1),
    filterEfficiency = cms.untracked.double(1.0),
    pythiaHepMCVerbosity = cms.untracked.bool(False),
    comEnergy = cms.double(13000.),
    RandomizedParameters = cms.VPSet(),
)
    
model = "VBF_AnapoleDM"

# Parameters that define the grid in the bulk and diagonal
class gridBlock:
  def __init__(self, xmin, xmax, xstep):
    self.xmin = xmin
    self.xmax = xmax
    self.xstep = xstep

scanBlocks = []
scanBlocks.append(gridBlock(500, 2001, 250))

MN1 = [ 0.1, 1, 10, 50, 100, 200, 300, 400, 500, 750, 1000 ] 

# Number of events for mass point, in thousands
nev = 100

# -------------------------------
#    Constructing grid

cols = []
Nevents = []
xmin, xmax = 9999, 0
ymin, ymax = 9999, 0
for block in scanBlocks:
  Nbulk, Ndiag = 0, 0
  xmin = min(xmin, block.xmin)
  xmax = max(xmax, block.xmax)
  for mx in range(block.xmin, block.xmax, block.xstep):
    col = []
    for my in MN1:
      ymin = min(ymin, my)
      ymax = max(ymax, my)
      col.append([mx,my,nev])
      Nbulk += nev
    cols.append(col)
  Nevents.append([Nbulk, Ndiag])

mpoints = []
for col in cols: mpoints.extend(col)

for point in mpoints:
    mlambda, mchi = point[0], point[1]
    wgt = point[2]
    
    slhatable = baseSLHATable.replace('%MLAMBDA%','%e' % mlambda)
    slhatable = slhatable.replace('%MN1%','%e' % mchi)

    if mchi<1.:
      mchistr = ( '%.1f' % mchi).replace('.', 'p')
    else:
      mchistr = str(mchi)
    
    # base hadronizer, no jet matching
    basePythiaParameters = cms.PSet(
        pythia8CommonSettingsBlock,
        #pythia8CUEP8M1SettingsBlock,
        pythia8CP2SettingsBlock,
        MassParameters = cms.vstring(
            '23:mMin = 0.1',
            '24:mMin = 0.1',
            '6:m0 = 172.5',
        ), 
        parameterSets = cms.vstring('pythia8CommonSettings',
                                    #'pythia8CUEP8M1Settings',
                                    'pythia8CP2Settings',
                                    'MassParameters'
        )
    )

    generator.RandomizedParameters.append(
        cms.PSet(
            ConfigWeight = cms.double(wgt),
            #GridpackPath =  cms.string('cvmfs/cms.cern.ch/phys_generator/gridpacks/slc6_amd64_gcc481/13TeV/madgraph/V5_2.4.2/sus_sms/VBF_ADM/v1/VBF_ADM_mN1-%s_mLAMBDA-%i_tarball.tar.xz' % (mchistr, mlambda)),
            GridpackPath =  cms.string('/cvmfs/cms.cern.ch/phys_generator/gridpacks/2017/13TeV/madgraph/V5_2.4.2/sus_sms/LO_PDF/VBF_ADM/v1/VBF_ADM_mN1-%s_mLAMBDA-%i_tarball.tar.xz' % (mchistr, mlambda)),
            ConfigDescription = cms.string('%s_%s_%i' % (model, mchistr, mlambda)),
            SLHATableForPythia8 = cms.string('%s' % slhatable),
            PythiaParameters = basePythiaParameters,
        ),
    )

 
